{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulussimanjuntak/Desktop/react-hydrotech/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Layout, notification, Row, Col, Switch } from \"antd\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Chart from \"react-apexcharts\";\nimport isEqual from \"validator/lib/equals\";\nimport isEmpty from \"validator/lib/isEmpty\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Card from \"react-bootstrap/Card\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport LoginComponent from \"./components/Login\";\nimport { formLogin, formLoginIsValid } from \"./formdata/formLogin\";\nconst EMAIL = \"hydro@gmail.com\";\nconst PASSWORD = \"asdasd\";\nconst IP = \"192.168.18.229:81\";\n\nconst App = () => {\n  _s();\n\n  const [login, setLogin] = useState(formLogin);\n  const [isLogin, setIsLogin] = useState(false);\n  const [statistic, setStatistic] = useState([{\n    suhu: \"0\",\n    nutrisi: \"0\",\n    ph: \"0\"\n  }]);\n  const {\n    email,\n    password\n  } = login;\n\n  const inputChangeHandler = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (isEmpty(value || \"\", {\n      ignore_whitespace: true\n    })) {\n      const data = { ...login,\n        [name]: { ...login[name],\n          value: value,\n          isValid: false,\n          message: \"Kolom tidak boleh kosong\"\n        }\n      };\n      setLogin(data);\n    } else {\n      const data = { ...login,\n        [name]: { ...login[name],\n          value: value,\n          isValid: true,\n          message: null\n        }\n      };\n      setLogin(data);\n    }\n  };\n\n  const submitLoginHandler = () => {\n    if (formLoginIsValid(login, setLogin)) {\n      if (isEqual(email.value, EMAIL) && isEqual(password.value, PASSWORD)) {\n        notification.success({\n          message: \"Success\",\n          description: \"Selamat datang Hydropronics\"\n        });\n        setIsLogin(true);\n        const dataWS = new W3CWebSocket(`ws://${IP}`, ['arduino']);\n\n        dataWS.onmessage = message => {\n          if (message.data !== \"Connected\") {\n            if (typeof message.data == \"string\") {\n              let dataObj = {};\n              const data = message.data.split(\",\");\n\n              for (let val of data) {\n                dataObj[val.split(\":\")[0]] = val.split(\":\")[1];\n              }\n\n              setStatistic(data => [...data, dataObj]);\n            }\n          }\n        };\n      } else {\n        setIsLogin(false);\n        notification.error({\n          message: \"Error\",\n          description: \"Akun tidak terdaftar\"\n        });\n      }\n    }\n  };\n\n  let ph = statistic.map(data => data.ph);\n  const suhu = statistic.map(data => data.suhu);\n  const nutrisi = statistic.map(data => data.nutrisi);\n  const seriesPH = [{\n    name: \"PH\",\n    data: ph\n  }];\n  const optionPH = {\n    chart: {\n      type: 'area',\n      zoom: {\n        enabled: false\n      },\n      toolbar: {\n        show: false\n      },\n      animations: {\n        enabled: true,\n        easing: 'linear',\n        dynamicAnimation: {\n          speed: 1000\n        }\n      }\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      }\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '45%'\n      }\n    },\n    sparkline: {\n      enabled: true\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth'\n    },\n    fill: {\n      opacity: 1\n    },\n    title: {\n      text: ph[ph.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'pH',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#00E396']\n  };\n  useEffect(() => {\n    ph.shift();\n  }, [ph]);\n  console.log(parseFloat(ph[ph.length - 1]) < 5);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        expand: \"lg\",\n        variant: \"light\",\n        bg: \"light\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            className: \"font-weight-bold\",\n            children: \"HYDRO TECH\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"ml-auto\",\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              onClick: () => setIsLogin(false),\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"bg-white mt-5\",\n        children: /*#__PURE__*/_jsxDEV(Layout.Content, {\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                lg: 16,\n                md: 24,\n                sm: 24,\n                xs: 24,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"mb-2 h-100\",\n                  children: /*#__PURE__*/_jsxDEV(Chart, {\n                    options: optionPH,\n                    series: seriesPH\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                lg: 8,\n                md: 24,\n                sm: 24,\n                xs: 24,\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"p-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Suhu\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"text-center display-4\",\n                      children: suhu[suhu.length - 1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"p-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: \"Nutrisi\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"text-center display-4\",\n                      children: nutrisi[nutrisi.length - 1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Card, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    className: \"p-2 text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      className: \"text-left\",\n                      children: [\"Pompa \", parseFloat(ph[ph.length - 1]) < 5]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"pH Up: \", /*#__PURE__*/_jsxDEV(Switch, {\n                        checkedChildren: \"On\",\n                        unCheckedChildren: \"Off\",\n                        checked: parseFloat(ph[ph.length - 1]) < 5\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 199,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"pH Down: \", /*#__PURE__*/_jsxDEV(Switch, {\n                        checkedChildren: \"On\",\n                        unCheckedChildren: \"Off\",\n                        checked: parseFloat(ph[ph.length - 1]) < 7\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 17\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Nutrisi: \", /*#__PURE__*/_jsxDEV(Switch, {\n                        checkedChildren: \"On\",\n                        unCheckedChildren: \"Off\",\n                        checked: nutrisi[nutrisi.length - 1] < 500\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(LoginComponent, {\n      state: login,\n      onChange: inputChangeHandler,\n      submit: submitLoginHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"/8EuDb1j3wrprt6T0bP/xVPRcS0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paulussimanjuntak/Desktop/react-hydrotech/src/App.js"],"names":["useState","useEffect","Layout","notification","Row","Col","Switch","w3cwebsocket","W3CWebSocket","Chart","isEqual","isEmpty","Nav","Card","Navbar","Container","LoginComponent","formLogin","formLoginIsValid","EMAIL","PASSWORD","IP","App","login","setLogin","isLogin","setIsLogin","statistic","setStatistic","suhu","nutrisi","ph","email","password","inputChangeHandler","e","name","target","value","ignore_whitespace","data","isValid","message","submitLoginHandler","success","description","dataWS","onmessage","dataObj","split","val","error","map","seriesPH","optionPH","chart","type","zoom","enabled","toolbar","show","animations","easing","dynamicAnimation","speed","xaxis","labels","axisTicks","tooltip","plotOptions","bar","columnWidth","sparkline","dataLabels","stroke","curve","fill","opacity","title","text","length","offsetX","style","fontSize","cssClass","subtitle","colors","shift","console","log","parseFloat"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Layout, notification, Row, Col, Switch } from \"antd\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport Chart from \"react-apexcharts\";\nimport isEqual from \"validator/lib/equals\";\nimport isEmpty from \"validator/lib/isEmpty\";\n\nimport Nav from \"react-bootstrap/Nav\";\nimport Card from \"react-bootstrap/Card\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\n\nimport LoginComponent from \"./components/Login\"\n\nimport { formLogin, formLoginIsValid } from \"./formdata/formLogin\";\n\nconst EMAIL = \"hydro@gmail.com\";\nconst PASSWORD = \"asdasd\";\nconst IP = \"192.168.18.229:81\";\n\nconst App = () => {\n  const [login, setLogin] = useState(formLogin);\n  const [isLogin, setIsLogin] = useState(false);\n  const [statistic, setStatistic] = useState([ { suhu: \"0\", nutrisi: \"0\", ph: \"0\" } ]);\n\n  const { email, password } = login;\n\n  const inputChangeHandler = e => {\n    const name = e.target.name\n    const value = e.target.value\n\n    if(isEmpty(value || \"\", { ignore_whitespace: true })){\n      const data = {\n        ...login,\n        [name]: {\n          ...login[name],\n          value: value,\n          isValid: false,\n          message: \"Kolom tidak boleh kosong\",\n        },\n      };\n      setLogin(data);\n    } else {\n      const data = {\n        ...login,\n        [name]: {\n          ...login[name],\n          value: value,\n          isValid: true,\n          message: null,\n        },\n      };\n      setLogin(data);\n    }\n  }\n\n  const submitLoginHandler = () => {\n    if(formLoginIsValid(login, setLogin)){\n      if(isEqual(email.value, EMAIL) && isEqual(password.value, PASSWORD)){\n        notification.success({\n          message: \"Success\",\n          description: \"Selamat datang Hydropronics\",\n        });\n        setIsLogin(true);\n\n        const dataWS = new W3CWebSocket(`ws://${IP}`, ['arduino']);\n\n        dataWS.onmessage = message => {\n          if(message.data !== \"Connected\"){\n            if(typeof message.data == \"string\") {\n              let dataObj = {}\n              const data = message.data.split(\",\")\n              for(let val of data) {\n                dataObj[val.split(\":\")[0]] = val.split(\":\")[1]\n              }\n              setStatistic(data => [...data, dataObj])\n            }\n          }\n        }\n\n      } else {\n        setIsLogin(false);\n        notification.error({\n          message: \"Error\",\n          description: \"Akun tidak terdaftar\",\n        });\n      }\n    }\n  }\n\n  let ph = statistic.map(data => data.ph)\n  const suhu = statistic.map(data => data.suhu)\n  const nutrisi = statistic.map(data => data.nutrisi)\n\n  const seriesPH = [ { name: \"PH\", data: ph } ]\n\n  const optionPH = {\n    chart: {\n      type: 'area',\n      zoom: { enabled: false },\n      toolbar: { show: false },\n      animations: {\n        enabled: true,\n        easing: 'linear',\n        dynamicAnimation: {\n          speed: 1000\n        }\n      },\n\n    },\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      tooltip: {\n        enabled: false\n      },\n    },\n    plotOptions: {\n      bar: {\n        columnWidth: '45%',\n      }\n    },\n    sparkline: { enabled: true },\n    dataLabels: { enabled: false },\n    stroke: { curve: 'smooth' },\n    fill: { opacity: 1, },\n\n    title: {\n      text: ph[ph.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'pH',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#00E396'],\n  }\n  \n  useEffect(() => {\n    ph.shift()\n  }, [ph])\n\n  console.log(parseFloat(ph[ph.length - 1]) < 5)\n\n  return(\n    <>\n      {isLogin ? (\n        <>\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n          <Container>\n            <Navbar.Brand className=\"font-weight-bold\">HYDRO TECH</Navbar.Brand>\n            <Nav className=\"ml-auto\">\n              <Nav.Link onClick={() => setIsLogin(false)}>Logout</Nav.Link>\n            </Nav>\n          </Container>\n        </Navbar>\n        <Layout className=\"bg-white mt-5\">\n          <Layout.Content>\n            <Container>\n              <Row gutter={[16, 16]}>\n\n                <Col lg={16} md={24} sm={24} xs={24}>\n                  <Card className=\"mb-2 h-100\">\n                    <Chart options={optionPH} series={seriesPH} />\n                  </Card>\n                </Col>\n\n                <Col lg={8} md={24} sm={24} xs={24}>\n                  <Card className=\"mb-3\">\n                    <Card.Body className=\"p-2\">\n                      <h5>Suhu</h5>\n                      <h2 className=\"text-center display-4\">{suhu[suhu.length - 1]}</h2>\n                    </Card.Body>\n                  </Card>\n\n                  <Card className=\"mb-3\">\n                    <Card.Body className=\"p-2\">\n                      <h5>Nutrisi</h5>\n                      <h2 className=\"text-center display-4\">{nutrisi[nutrisi.length - 1]}</h2>\n                    </Card.Body>\n                  </Card>\n\n                  <Card>\n                    <Card.Body className=\"p-2 text-center\">\n                      <h5 className=\"text-left\">Pompa {parseFloat(ph[ph.length - 1]) < 5}</h5>\n                <p>pH Up: <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\"  checked={parseFloat(ph[ph.length - 1]) < 5} /></p> \n                <p>pH Down: <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\"  checked={parseFloat(ph[ph.length - 1]) < 7} /></p> \n                <p>Nutrisi: <Switch checkedChildren=\"On\" unCheckedChildren=\"Off\"  checked={nutrisi[nutrisi.length - 1] < 500} /></p> \n                    </Card.Body>\n                  </Card>\n                </Col>\n\n              </Row>\n            </Container>\n          </Layout.Content>\n        </Layout>\n        </>\n      ) : (\n        <LoginComponent \n          state={login} \n          onChange={inputChangeHandler} \n          submit={submitLoginHandler} \n        />\n      )}\n    </>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}