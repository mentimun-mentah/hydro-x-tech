{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/paulussimanjuntak/Desktop/react-hydrotech/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Layout, notification, Row, Col } from \"antd\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport Chart from \"react-apexcharts\";\nimport isEqual from \"validator/lib/equals\";\nimport isEmpty from \"validator/lib/isEmpty\";\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\nimport LoginComponent from \"./components/Login\";\nimport { formLogin, formLoginIsValid } from \"./formdata/formLogin\";\nconst EMAIL = \"hydro@gmail.com\";\nconst PASSWORD = \"asdasd\";\nconst IP = \"192.168.18.229:81\";\n\nconst App = () => {\n  _s();\n\n  const [login, setLogin] = useState(formLogin);\n  const [isLogin, setIsLogin] = useState(false);\n  const [statistic, setStatistic] = useState([{\n    suhu: \"0\",\n    nutrisi: \"0\",\n    ph: \"0\"\n  }]);\n  const {\n    email,\n    password\n  } = login;\n\n  const inputChangeHandler = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    if (isEmpty(value || \"\", {\n      ignore_whitespace: true\n    })) {\n      const data = { ...login,\n        [name]: { ...login[name],\n          value: value,\n          isValid: false,\n          message: \"Kolom tidak boleh kosong\"\n        }\n      };\n      setLogin(data);\n    } else {\n      const data = { ...login,\n        [name]: { ...login[name],\n          value: value,\n          isValid: true,\n          message: null\n        }\n      };\n      setLogin(data);\n    }\n  };\n\n  const submitLoginHandler = () => {\n    if (formLoginIsValid(login, setLogin)) {\n      if (isEqual(email.value, EMAIL) && isEqual(password.value, PASSWORD)) {\n        notification.success({\n          message: \"Success\",\n          description: \"Selamat datang Hydropronics\"\n        });\n        setIsLogin(true);\n        const dataWS = new W3CWebSocket(`ws://${IP}`, ['arduino']);\n\n        dataWS.onmessage = message => {\n          if (message.data !== \"Connected\") {\n            if (typeof message.data == \"string\") {\n              let dataObj = {};\n              const data = message.data.split(\",\");\n\n              for (let val of data) {\n                dataObj[val.split(\":\")[0]] = val.split(\":\")[1];\n              }\n\n              setStatistic(data => [...data, dataObj]);\n            }\n          }\n        };\n      } else {\n        setIsLogin(false);\n        notification.error({\n          message: \"Error\",\n          description: \"Akun tidak terdaftar\"\n        });\n      }\n    }\n  };\n\n  const suhu = statistic.map(data => data.suhu);\n  const ph = statistic.map(data => data.ph);\n  const nutrisi = statistic.map(data => data.nutrisi);\n  const seriesPH = [{\n    name: \"PH\",\n    data: ph\n  }];\n  const seriesSuhu = [{\n    name: \"Suhu\",\n    data: suhu\n  }];\n  const optionPH = {\n    chart: {\n      height: 350,\n      type: 'area'\n    },\n    sparkline: {\n      enabled: true\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    fill: {\n      opacity: 1\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    title: {\n      text: ph[ph.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'PH',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#00E396']\n  };\n  const optionSuhu = {\n    chart: {\n      height: 350,\n      type: 'area'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    fill: {\n      opacity: 1\n    },\n    title: {\n      text: suhu[suhu.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'Suhu',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#008FFB']\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLogin ? /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"bg-white\",\n      children: /*#__PURE__*/_jsxDEV(Layout.Content, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [16, 16],\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Chart, {\n                  options: optionPH,\n                  series: seriesPH\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(Chart, {\n                  options: optionSuhu,\n                  series: seriesSuhu\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              lg: 24,\n              md: 24,\n              sm: 24,\n              xs: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginComponent, {\n      state: login,\n      onChange: inputChangeHandler,\n      submit: submitLoginHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"55tnjuzh6d0UafzvC6cFtex9wes=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/paulussimanjuntak/Desktop/react-hydrotech/src/App.js"],"names":["useState","Layout","notification","Row","Col","w3cwebsocket","W3CWebSocket","Chart","isEqual","isEmpty","Card","Container","LoginComponent","formLogin","formLoginIsValid","EMAIL","PASSWORD","IP","App","login","setLogin","isLogin","setIsLogin","statistic","setStatistic","suhu","nutrisi","ph","email","password","inputChangeHandler","e","name","target","value","ignore_whitespace","data","isValid","message","submitLoginHandler","success","description","dataWS","onmessage","dataObj","split","val","error","map","seriesPH","seriesSuhu","optionPH","chart","height","type","sparkline","enabled","dataLabels","stroke","curve","fill","opacity","xaxis","title","text","length","offsetX","style","fontSize","cssClass","subtitle","colors","optionSuhu"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Layout, notification, Row, Col } from \"antd\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport Chart from \"react-apexcharts\";\nimport isEqual from \"validator/lib/equals\";\nimport isEmpty from \"validator/lib/isEmpty\";\n\nimport Card from \"react-bootstrap/Card\";\nimport Container from \"react-bootstrap/Container\";\n\nimport LoginComponent from \"./components/Login\"\n\nimport { formLogin, formLoginIsValid } from \"./formdata/formLogin\";\n\nconst EMAIL = \"hydro@gmail.com\";\nconst PASSWORD = \"asdasd\";\nconst IP = \"192.168.18.229:81\";\n\nconst App = () => {\n  const [login, setLogin] = useState(formLogin);\n  const [isLogin, setIsLogin] = useState(false);\n  const [statistic, setStatistic] = useState([ { suhu: \"0\", nutrisi: \"0\", ph: \"0\" } ]);\n\n  const { email, password } = login;\n\n  const inputChangeHandler = e => {\n    const name = e.target.name\n    const value = e.target.value\n\n    if(isEmpty(value || \"\", { ignore_whitespace: true })){\n      const data = {\n        ...login,\n        [name]: {\n          ...login[name],\n          value: value,\n          isValid: false,\n          message: \"Kolom tidak boleh kosong\",\n        },\n      };\n      setLogin(data);\n    } else {\n      const data = {\n        ...login,\n        [name]: {\n          ...login[name],\n          value: value,\n          isValid: true,\n          message: null,\n        },\n      };\n      setLogin(data);\n    }\n  }\n\n  const submitLoginHandler = () => {\n    if(formLoginIsValid(login, setLogin)){\n      if(isEqual(email.value, EMAIL) && isEqual(password.value, PASSWORD)){\n        notification.success({\n          message: \"Success\",\n          description: \"Selamat datang Hydropronics\",\n        });\n        setIsLogin(true);\n\n        const dataWS = new W3CWebSocket(`ws://${IP}`, ['arduino']);\n\n        dataWS.onmessage = message => {\n          if(message.data !== \"Connected\"){\n            if(typeof message.data == \"string\") {\n              let dataObj = {}\n              const data = message.data.split(\",\")\n              for(let val of data) {\n                dataObj[val.split(\":\")[0]] = val.split(\":\")[1]\n              }\n              setStatistic(data => [...data, dataObj])\n            }\n          }\n        }\n\n      } else {\n        setIsLogin(false);\n        notification.error({\n          message: \"Error\",\n          description: \"Akun tidak terdaftar\",\n        });\n      }\n    }\n  }\n\n  const suhu = statistic.map(data => data.suhu)\n  const ph = statistic.map(data => data.ph)\n  const nutrisi = statistic.map(data => data.nutrisi)\n\n  const seriesPH = [ { name: \"PH\", data: ph }, ]\n  const seriesSuhu = [ { name: \"Suhu\", data: suhu }, ]\n\n  const optionPH = {\n    chart: {\n      height: 350,\n      type: 'area'\n    },\n    sparkline: { enabled: true },\n    dataLabels: { enabled: false },\n    stroke: { curve: 'straight' },\n    fill: { opacity: 1, },\n    xaxis: { type: 'datetime', },\n    title: {\n      text: ph[ph.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'PH',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#00E396'],\n  }\n\n  const optionSuhu = {\n    chart: {\n      height: 350,\n      type: 'area'\n    },\n    dataLabels: { enabled: false },\n    stroke: { curve: 'straight' },\n    fill: { opacity: 1, },\n    title: {\n      text: suhu[suhu.length - 1],\n      offsetX: 30,\n      style: {\n        fontSize: '24px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    subtitle: {\n      text: 'Suhu',\n      offsetX: 30,\n      style: {\n        fontSize: '14px',\n        cssClass: 'apexcharts-yaxis-title'\n      }\n    },\n    colors: ['#008FFB'],\n  }\n\n  return(\n    <>\n      {isLogin ? (\n        <Layout className=\"bg-white\">\n          <Layout.Content>\n            <Container>\n              <Row gutter={[16, 16]}>\n\n                <Col lg={24} md={24} sm={24} xs={24}>\n                  <Card>\n                    <Chart options={optionPH} series={seriesPH} />\n                  </Card>\n                </Col>\n\n                <Col lg={24} md={24} sm={24} xs={24}>\n                  <Card>\n                    <Chart options={optionSuhu} series={seriesSuhu} />\n                  </Card>\n                </Col>\n\n                <Col lg={24} md={24} sm={24} xs={24}>\n                  <Card>\n                    {/* <Chart options={} series={} /> */}\n                  </Card>\n                </Col>\n\n              </Row>\n            </Container>\n          </Layout.Content>\n        </Layout>\n      ) : (\n        <LoginComponent \n          state={login} \n          onChange={inputChangeHandler} \n          submit={submitLoginHandler} \n        />\n      )}\n    </>\n  )\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}